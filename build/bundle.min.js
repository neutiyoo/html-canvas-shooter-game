!function(){"use strict";class t{constructor(t,e,i,a,o={x:0,y:0},r=1){this.x=t,this.y=e,this.radius=i,this.color=a,this.velocity=o,this.alpha=r}draw(t){t.save(),t.globalAlpha=this.alpha,t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI,!1),t.fillStyle=this.color,t.fill(),t.restore()}move(t){this.draw(t),this.x=this.x+this.velocity.x,this.y=this.y+this.velocity.y}fadeOut(t,e){this.move(t),this.velocity.x*=1-e,this.velocity.y*=1-e,this.alpha>0&&(this.alpha-=.01)}}const e={background:{color:"rgba(0, 0, 0, 0.1)"},score:{survive:1,hit:500,destroy:1e3},player:{color:"white"},projectile:{radius:3,speed:5},enemy:{randomizedSizeThreshold:1e4,radiusReductionPerHit:10,minRadius:10,maxRadius:30},explosionParticle:{maxRadius:3,velocityReductionRate:.02,maxExplosionSize:9},backgroundParticle:{colors:["white","royalblue","lightyellow","coral"],maxRadius:1,total:1e3,initialAlpha:.1}},i=t=>setTimeout(t,0),a=document.querySelector("canvas");a.width=innerWidth,a.height=innerHeight;const o=a.getContext("2d");let r=0;const s=document.querySelector("#score");let h=Number(localStorage.getItem("bestScore"))||0;document.querySelector("#best-score").innerHTML=h.toString();const n=[],l=[],c=[],d=Array.from({length:e.backgroundParticle.total},(()=>new t(Math.random()*a.width,Math.random()*a.height,e.backgroundParticle.maxRadius*Math.random(),e.backgroundParticle.colors[Math.floor(Math.random()*e.backgroundParticle.colors.length)],void 0,e.backgroundParticle.initialAlpha))),u=new t(a.width/2,a.height/2,10,e.player.color,void 0,void 0);u.draw(o);const m=(t,e)=>Math.hypot(t.x-e.x,t.y-e.y)-(t.radius+e.radius)<1,y=(t,e)=>{t.move(o),(t.x+t.radius<0||t.x-t.radius>a.width||t.y+t.radius<0||t.y-t.radius>a.height)&&i((()=>{n.splice(e,1)}))},p=a=>(h,d)=>{h.move(o),m(u,h)&&((t,e)=>{cancelAnimationFrame(t),localStorage.setItem("bestScore",e.toString())})(a,r),n.forEach(((a,o)=>{if(m(a,h)){const u=h.radius>e.enemy.minRadius;for(let i=0;i<2*h.radius;i++)c.push(new t(a.x,a.y,Math.random()*e.explosionParticle.maxRadius,h.color,{x:(Math.random()-.5)*(Math.random()*e.explosionParticle.maxExplosionSize),y:(Math.random()-.5)*(Math.random()*e.explosionParticle.maxExplosionSize)},void 0));u?(r+=e.score.hit,h.radius-=e.enemy.radiusReductionPerHit):(r+=e.score.destroy,i((()=>{l.splice(d,1)}))),s.innerHTML=r.toString(),i((()=>{n.splice(o,1)}))}}))},x=(t,a)=>{t.alpha<=0?i((()=>{c.splice(a,1)})):t.fadeOut(o,e.explosionParticle.velocityReductionRate)},g=()=>{r+=e.score.survive,s.innerHTML=r.toString();const t=requestAnimationFrame(g);o.fillStyle=e.background.color,o.fillRect(0,0,a.width,a.height),u.draw(o),n.forEach(y),l.forEach(p(t)),c.forEach(x),d.forEach((t=>t.draw(o)))};window.addEventListener("pointerdown",(i=>{const o=Math.atan2(i.clientY-a.height/2,i.clientX-a.width/2),r=new t(a.width/2,a.height/2,e.projectile.radius,e.player.color,{x:Math.cos(o)*e.projectile.speed,y:Math.sin(o)*e.projectile.speed},void 0);n.push(r)})),g(),setInterval((()=>{(()=>{const i=r>e.enemy.randomizedSizeThreshold?Math.max(Math.random()*e.enemy.minRadius,e.enemy.maxRadius):(e.enemy.minRadius+e.enemy.maxRadius)/2,o=Math.random(),s=Math.random();let h=o*a.width,n=s*a.height;Math.random()<.5?h=o<.5?0-i:a.width+i:n=s<.5?0-i:a.height+i;const c=Math.atan2(a.height/2-n,a.width/2-h),d={x:Math.cos(c),y:Math.sin(c)},u=new t(h,n,i,`hsl(${360*Math.random()}, 50% ,50%`,d,void 0);l.push(u)})()}),1e3)}();
